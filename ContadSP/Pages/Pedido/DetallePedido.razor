@page "/detallePedido/{id}"

@using ContadSP.Repositorios
@using ContadSP.Models
@using System.Text.Json
@using Radzen
@using Radzen.Blazor

@inject IRepositorio<DetalleProvision> repositorioDetalleProvision
@inject IRepositorio<Provision> repositorioProvision
@inject IRepositorio<Proveedor> repositorioProveedor
@inject IRepositorio<ProvisionExp> repositorioProvisionExp
@inject DialogService DialogService
@inject IJSRuntime JSRuntime

<div class="container mt-4">
    
    <div class="row justify-content-center">
        <div class="col-md-12 border rounded">
            <div class="conteiner-fluid">
                <div>
                    <h3 class="text-center">Detalle de la provisión</h3>
                </div>
                <div class="row">
                    <div class="col">
                        <label><strong>ID:</strong></label>
                        <label>@prov.id</label>
                    </div>
                    <div class="col">
                        <label><strong>Fecha provisión:</strong></label>
                        <label>@prov.fecha_provision</label>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label><strong>Descripcion:</strong></label>
                        <label>@prov.descripcion</label>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label><strong>Destino:</strong></label>
                        <label>@destino</label>
                    </div>
                    <div class="col">
                        <label><strong>Usuario solicitante:</strong></label>
                 
                        <label>@usuario</label>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label><strong>Tipo pedido:</strong></label>
                        <label>@tipo</label>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label><strong>Estado: </strong></label>
                        @if (prov.estado_id == 1)
                        {
                            <label class="text-warning"><strong>PROVISION PENDIENTE DE APROBACION</strong></label>
                            
                        }
                        else if (prov.estado_id == 2)
                        {
                            <label class="text-success"><strong> PROVISION APROBADA</strong></label>
                        }else if (prov.estado_id == 3)
                        {
                            <label class="text-danger"><strong> PROVISION CANCELADA</strong></label>
                        }
                    </div>
                </div>
                <br>

                <div style="overflow: auto;">
                    <table class="table table-striped table-responsive table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th>Artículo</th>
                                <th>Cantidad</th>
                                <th>Unidad</th>
                                <th>Subtotal aprox.</th>
                                <th>Subtotal letra</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var p in provisionDetalle)
                            {
                                <tr>
                                    <td>@p.Articulo.descripcion</td>
                                    <td>@p.cantidad</td>
                                    <td>@p.UnidadMedida.unidad</td>
                                    <td>@p.subtotal_aprox</td>
                                    <td>@p.subtotal_letra</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="row text-end">
                        <div class="col">
                            <label><strong>Total Aproximado:</strong></label>
                            <label>@prov.total_aprox</label>
                        </div>
                    </div>
                    <div class="row text-end">
                        <div class="col">
                            <label><strong>Total aproximado letra:</strong></label>
                            <label>@prov.total_letra</label>
                        </div>
                    </div>
                </div>
                <br>
                @if (prov.estado_id == 1)
                {
                    <div class="btn-opciones">
                        <div class="boton-busqueda">
                            <button type="button" class="btn btn-success" @onclick="() => AprobarProvision(prov)">Aprobar provisión</button>
                            <button type="button" class="btn btn-danger" @onclick="() => CancelarProvision(prov)">Cancelar provisión</button>
                        </div>
                    </div>
                }
                else if (prov.estado_id == 2)
                {
                        <div style="overflow: auto;">
                            <h4>Proveedores Seleccionados</h4>
                            <table class="table table-striped table-responsive table-hover">
                                <thead class="thead-dark">
                                    <tr>
                                        <th>Nombre</th>
                                        <th>Comercio</th>
                                        <th>Dirección</th>
                                        <th>Teléfono</th>
                                        <th>Email</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var d in proveedoresSeleccionados)
                                    {
                                        if (d.Value)
                                        {
                                            <tr>
                                                <td>@d.Key.nombre</td>
                                                <td>@d.Key.nombre_comercial</td>
                                                <td>@d.Key.direccion</td>
                                                <td>@d.Key.telefono</td>
                                                <td>@d.Key.email</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="btn-opciones">
                            <div class="boton-busqueda">
                                <button type="button" class="btn btn-primary" @onclick="SeleccionarProveedores">Seleccionar proveedores</button>
                            </div>
                            <div class="boton-ver">
                                <button type="button" class="btn btn-success">Generar pedido</button>
                            </div>
                        </div>
                        <br />
                        <br />
                    <br />
                    <br />
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string id { get; set; }

    private List<DetalleProvision> provisionDetalle = new List<DetalleProvision>();
    private Provision prov = new Provision();
    private string? destino;
    private string? usuario;
    private string? tipo;
    private List<Proveedor> proveedores = new List<Proveedor>();
    private Dictionary<Proveedor, bool> proveedoresSeleccionados = new Dictionary<Proveedor, bool>();
    private ProvisionExp exp = new ProvisionExp();
    private int ultimaProvExp = 0;

    protected override async Task OnInitializedAsync()
    {
        
        prov = await repositorioProvision.ObtenerProvisionPorId(int.Parse(id));
        destino = prov.Destino.destino;
        usuario = prov.Usuario.nombre_usuario;
        tipo = prov.TipoPedido.tipo;
        provisionDetalle = (await repositorioDetalleProvision.ObtenerProvisionesId(int.Parse(id))).ToList();

    }

    private async Task SeleccionarProveedores()
    {
         proveedores = (await repositorioProveedor.ObtenerTodo()).ToList();

         // Inicializa el diccionario de proveedores seleccionados
         foreach (var proveedor in proveedores)
         {
             if (!proveedoresSeleccionados.ContainsKey(proveedor))
             {
                 proveedoresSeleccionados[proveedor] = false;
             }
        }

        var result = await DialogService.OpenAsync("Lista de proveedores", ds =>
             @<RadzenStack Gap="1.5rem">
                 <div class="conteiner-fluid">
                     <div style="overflow: auto;">
                         <table class="table table-striped table-responsive table-hover">
                             <thead class="thead-dark">
                                 <tr>
                                     <th>Nombre</th>
                                     <th>Nombre comercial</th>
                                     <th>Dirección</th>
                                     <th>Teléfono</th>
                                     <th>Email</th>
                                     <th>Agregar</th>
                                 </tr>
                             </thead>
                             <tbody>
                             @foreach (var p in proveedores)
                             {
                                 <tr>
                                     <td>@p.nombre</td>
                                     <td>@p.nombre_comercial</td>
                                     <td>@p.direccion</td>
                                     <td>@p.telefono</td>
                                     <td>@p.email</td>
                                     <td><RadzenCheckBox @bind-Value=@proveedoresSeleccionados[p] @onchange="e => OnProveedorSeleccionado(e, p)" /></td>
                                 </tr>
                             }
                             </tbody>
                         </table>
                     </div>
                     <div class="align-content-end">

                        <button type="button" class="btn btn-primary" @onclick="() => DialogService.Close()">
                            Aceptar
                        </button>

                    </div>
                 </div>
            
             </RadzenStack>
    ,
             new DialogOptions() { Width = "auto", Height = "auto" });
    }

    // Método para manejar el cambio de estado del checkbox
    private void OnProveedorSeleccionado(ChangeEventArgs e, Proveedor proveedor)
    {
        proveedoresSeleccionados[proveedor] = (bool)e.Value;
    }

    private async Task GenerarPedido()
    {

    }

    private async Task AprobarProvision(Provision prov)
    {
        //await CargarPoceso(prov);
        ultimaProvExp = await repositorioProvisionExp.ObtenerUltimaProvisionExpId() + 1;
        await repositorioProvision.CambiarEstadoProvision(prov, 2);
        exp.provision_id = prov.id;
        exp.exp_num = "PROV-" + ultimaProvExp.ToString() + "-" + DateTime.Now.Year.ToString();
        await repositorioProvisionExp.Agregar(exp);
        //await CargarPedido(procesoPedido, prov);
        await JSRuntime.InvokeVoidAsync("showSweetAlert", "¡Éxito!", "La provisión se aprobó correctamente", "success");
        //muestra = provisiones.Where(p => p.estado == false).ToList();
        //StateHasChanged();
    }

    private async Task CancelarProvision(Provision prov)
    {
        int estado = 3;
        await repositorioProvision.CambiarEstadoProvision(prov, estado);
        await JSRuntime.InvokeVoidAsync("showSweetAlert", "¡Éxito!", "La provisión se canceló correctamente", "success");
        //muestra = provisiones.Where(p => p.estado == false).ToList();
        //StateHasChanged();
    }
    private void CargarProveedores(Dictionary<Proveedor, bool> proveedoresSeleccionados)
    {
        var proveedoresAgregados = proveedoresSeleccionados.Where(p => p.Value).Select(p => p.Key).ToList();
        // Aquí se puede hacer algo con los proveedores seleccionados
    }
}
