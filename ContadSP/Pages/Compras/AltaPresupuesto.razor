@page "/altaPresupuesto/{id}"

@using ContadSP.Repositorios
@using ContadSP.Models
@using Radzen
@using Radzen.Blazor

@inject IRepositorio<Pedido> repositorioPedido
@inject IRepositorio<PedidoProveedor> repositorioPedidoProveedor
@inject IRepositorio<Provision> repositorioProvision
@inject IRepositorio<ProcesoPedido> repositorioProcesoPedido
@inject IRepositorio<TipoPedido> repositorioTipoPedido
@inject IRepositorio<DetalleProvision> repositorioProvisionDetalle
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="container mt-4"> 
    <div class="row justify-content-center">
        <div class="col-md-12 border rounded">
            <div class="conteiner-fluid">
                <div>                    
                    <h3 class="text-center">Detalle del pedido</h3>
                </div>

                @* ----DATOS DE LA PROVISION/PEDIDO--- *@
                <div class="row">
                    <div class="col">
                        <label><strong>Tipo de pedido:</strong></label>
                        <label>@tipoPedido.tipo - @(procesoPedido?.Pedido != null ? procesoPedido.Proceso.proceso : "Pedido es null")</label>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label><strong>ID:</strong></label>
                        <label>@pedido.id</label>
                    </div>
                    <div class="col">
                        <label><strong>Fecha de pedido:</strong></label>
                        <label>@pedido.fecha_pedido</label>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label><strong>N° acta:</strong></label>
                        <label>@pedido.abreviatura-@pedido.acta_num-@pedido.anio</label>
                    </div>
                    <div class="col">
                        <label><strong>Proceso:</strong></label>
                        <label>@procesoPedido?.proceso_completo</label>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label><strong>Destino:</strong></label>
                        <label>@provision?.Destino?.destino</label>
                    </div>
                    <div class="col">
                        <label><strong>Usuario solicitante:</strong></label>
                        <label>@provision?.Usuario?.nombre_usuario</label>
                    </div>
                </div>
                <div style="overflow: auto;">
                    <table class="table table-striped table-responsive table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th>Artículo</th>
                                <th>Cantidad</th>
                                <th>Unidad</th>
                                <th>Subtotal aprox.</th>
                                <th>Subtotal letra</th>
                                <th>Especificación</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (provisionDetalle != null)
                            {
                                foreach (var p in provisionDetalle)
                                {
                                    // Render rows
                                }
                            }
                            else
                            {
                                <tr><td colspan="6">No data available</td></tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div></div>
        <br>
        <div class="col-md-12 border rounded">
            <div class="conteiner-fluid">
                <h3>Proveedores seleccionados</h3>
                <div style="overflow: auto;">
                    <table class="table table-striped table-responsive table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th>Nombre</th>
                                <th>Comercio</th>
                                <th>Dirección</th>
                                <th>Teléfono</th>
                                <th>Email</th>
                                <th>Carga</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var p in pedidoProveedor)
                            {
                                    <tr>
                                        <td>@p.Proveedor.nombre</td>
                                        <td>@p.Proveedor.nombre_comercial</td>
                                        <td>@p.Proveedor.direccion</td>
                                        <td>@p.Proveedor.telefono</td>
                                        <td>@p.Proveedor.email</td>
                                    @if (!p.carga)
                                    {
                                                <td><button class="btn btn-primary" @onclick="()=>CargarPresupuesto(p)">Cargar presupuesto</button></td>
                                    }
                                    else
                                    {
                                                <td><button class="btn btn-primary" @onclick="()=>CargarPresupuesto(p)">Ver presupuesto</button></td>
                                    }
                                    </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="btn-opciones">
                    <button class="btn btn-success" @onclick="()=>ConfirmarPresupuesto()">Confirmar presupuesto</button>
                </div>
                <br />
                <br />
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string id { get; set; }

    private List<PedidoProveedor> pedidoProveedor = new List<PedidoProveedor>();
    private List<DetalleProvision> provisionDetalle = new List<DetalleProvision>();

    private Pedido pedido = new Pedido();
    private Provision provision = new Provision();
    private ProcesoPedido procesoPedido = new ProcesoPedido();
    private TipoPedido tipoPedido = new TipoPedido();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            pedido = await repositorioPedido.ObtenerPorId(int.Parse(id));
            provision = await repositorioProvision.ObtenerPorId(pedido.provision_id);

            if (provision != null && provision.id > 0)
            {
                var detalles = await repositorioProvisionDetalle.ObtenerProvisionesId(provision.id);
                provisionDetalle = detalles?.ToList() ?? new List<DetalleProvision>();
            }
            else
            {
                provisionDetalle = new List<DetalleProvision>();
            }

            procesoPedido = await repositorioProcesoPedido.ObtenerProcesoPedidoPorPedidoId(pedido.id);
            pedidoProveedor = (await repositorioPedidoProveedor.ObtenerPedidoProveedorPorPedidoId(int.Parse(id))).ToList();
        }
        catch
        {
            // Manejo de errores (puedes registrar el error o mostrar un mensaje al usuario)
            provisionDetalle = new List<DetalleProvision>();
        }
    }

    private void CargarPresupuesto(PedidoProveedor pedidoProveedor)
    {
        var url = $"/presupuesto/{id}/{pedidoProveedor.proveedor_id}";
        NavigationManager.NavigateTo(url);
    }

    private async Task ConfirmarPresupuesto()
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("showSweetAlertConfirm", "Confirmar Presupuesto", "¿Estás seguro de que deseas confirmar el presupuesto? Una vez realizada esta acción no se podrá volver a cargar presupuestos para el pedido", "warning");
        if (confirmed)
        {
            await repositorioPedidoProveedor.CambiarEstadoProvision(provision, 5);
            await JSRuntime.InvokeVoidAsync("showSweetAlert", "¡Éxito!", "El presupuesto ha sido cargado correctamente", "success");
            NavigationManager.NavigateTo("/");
        }
    }
   }
