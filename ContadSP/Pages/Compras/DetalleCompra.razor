@page "/detalleCompra/{id:int}"

@using ContadSP.Repositorios
@using ContadSP.Models
@using System.Text.Json
@using Radzen
@using Radzen.Blazor

@inject IRepositorio<Provision> repositorioProvision
@inject IRepositorio<Pedido> repositorioPedido
@inject IRepositorio<Estado> repositorioEstado
@inject IRepositorio<DetalleProvision> repositorioDetalleProvision
@inject IRepositorio<PresupuestoPedido> repositorioPresupuestoPedido
@inject IRepositorio<Compra> repositorioCompra
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-12 border rounded">
            <div class="conteiner-fluid">
                @*  ----CONTENEDORES---- *@

                @* ----ENCABEZADO--- *@
                <div>
                    <h3 class="text-center">Detalle de la provisión</h3>
                </div>
                @* ----ENCABEZADO--- *@

                @* ----DATOS DE LA PROVISION/PEDIDO--- *@
                <div class="row">
                    <div class="col">
                        <label><strong>ID:</strong></label>
                        <label>@prov.id</label>
                    </div>
                    <div class="col">
                        <label><strong>Fecha provisión:</strong></label>
                        <label>@prov.fecha_provision</label>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label><strong>Descripcion:</strong></label>
                        <label>@prov.descripcion</label>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label><strong>Destino:</strong></label>
                        <label>@destino</label>
                    </div>
                    <div class="col">
                        <label><strong>Usuario solicitante:</strong></label>
                        <label>@usuario</label>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label><strong>Tipo pedido:</strong></label>
                        <label>@tipo</label>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label><strong>Estado: </strong></label>
                        <label class="@GetEstadoCssClass(prov.estado_id)"><strong>@estado.estado</strong></label>
                    </div>
                </div>
                @* ----DATOS DE LA PROVISION/PEDIDO---*@
                <br>
                

                @* ----ARTICULOS DE LA PROVISION/PEDIDO---- *@
                <div style="overflow: auto;">
                    <table class="table table-striped table-responsive table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th>Artículo</th>
                                <th>Cantidad</th>
                                <th>Unidad</th>
                                <th>Subtotal aprox.</th>
                                <th>Subtotal letra</th>
                                <th>Especificación</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var p in provisionDetalle)
                            {
                                <tr>
                                    <td>@p.Articulo.descripcion</td>
                                    <td>@p.cantidad</td>
                                    <td>@p.UnidadMedida.unidad</td>
                                    <td>@p.subtotal_aprox</td>
                                    <td>@p.subtotal_letra</td>
                                    <td>@p.especificacion</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="row text-end">
                        <div class="col">
                            <label><strong>Total Aproximado:</strong></label>
                            <label>@prov.total_aprox</label>
                        </div>
                    </div>
                    <div class="row text-end">
                        <div class="col">
                            <label><strong>Total aproximado letra:</strong></label>
                            <label>@prov.total_letra</label>
                        </div>
                    </div>
                </div>
                @* ----ARTICULOS DE LA PROVISION/PEDIDO---- *@

                <br>
                
                
                    <div style="overflow: auto;">
                        <h4>Artículos presupuestados</h4>

                        <table class="table table-striped table-responsive table-hover">

                            <tbody>
                                @foreach (var grupo in presupuestoPedidos.Where(pp => pp.Proveedor != null).GroupBy(pp => pp.proveedor_id))
                                {
                                    <tr>
                                        <td colspan="7"><strong>Proveedor: @grupo.First().Proveedor.nombre_comercial</strong></td>
                                    </tr>
                                    <tr>
                                        <th>Articulo</th>
                                        <th>Cantidad</th>
                                        <th>Precio unitario</th>
                                        <th>Precio total</th>
                                        <th>Subtotal letra</th>
                                        <th>Especificación</th>
                                        
                                    </tr>



                                    @foreach (var pp in grupo)
                                    {
                                        <tr>
                                            <td>@pp.DetalleProvision.Articulo.descripcion</td>
                                            <td>@pp.cantidad</td>
                                            <td>@pp.precio_unitario</td>
                                            <td>@pp.subtotal</td>
                                            <td>@pp.subtotal_letra</td>
                                            <td>@pp.especificacion</td>
                                            
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                        
                    </div>

                <div class="btn-opciones pb-3">
                    <button class="btn btn-success" @onclick="()=>ConfirmarEntrega()">Confirmar entrega</button>
                </div>
                @*  ----CONTENEDORES---- *@
            </div>
        </div>
    </div>
</div>
                



@code {
    [Parameter]
    public int Id { get; set; }

    private List<DetalleProvision> provisionDetalle = new List<DetalleProvision>();
    private List<Estado> estados = new List<Estado>();
    private List<Proveedor> proveedores = new List<Proveedor>();
    private List<Proceso> procesos = new List<Proceso>();
    private List<PedidoProveedor> pedidoProveedorList = new List<PedidoProveedor>();
    private List<PresupuestoPedido> presupuestoPedidos = new List<PresupuestoPedido>();
    private Dictionary<Proveedor, bool> proveedoresSeleccionados = new Dictionary<Proveedor, bool>();

    //diccionario articulos para el select
    private Dictionary<int, bool> productosSeleccionados = new Dictionary<int, bool>();

    private Provision prov = new Provision();
    private Estado? estado = new Estado();
    private Pedido pedido = new Pedido();
    private PedidoProveedor pedidoProveedor = new PedidoProveedor();
    private ProvisionExp exp = new ProvisionExp();
    private ProvisionExp? ultimaProvExp = new ProvisionExp();
    private Pedido ultimoPedido = new Pedido();
    private Compra compra = new Compra();

    private string? destino;
    private string? usuario;
    private string? tipo;
    private int anio = 0;

    protected override async Task OnInitializedAsync()
    {
        prov = await repositorioProvision.ObtenerProvisionPorId(Id);
        pedido = await repositorioPedido.ObteberPedidoPorProvisionId(prov.id);
        presupuestoPedidos = (await repositorioPresupuestoPedido.ObtenerPresupuestoPedidoPorPedidoId(pedido.id)).Where(pp => pp.seleccion == true)
        .ToList();

        //procesos = (await repositorioProceso.ObtenerTodo()).ToList();
        destino = prov.Destino.destino;
        usuario = prov.Usuario.nombre_usuario;
        tipo = prov.TipoPedido.tipo;
        provisionDetalle = (await repositorioDetalleProvision.ObtenerProvisionesId(Id)).ToList();

    }

    private string GetEstadoCssClass(int estadoId)
    {
        var estadoCssMap = new Dictionary<int, string>
                {
            { 1, "text-warning" },
            { 4, "text-warning" },
            { 2, "text-success" },
            { 5, "text-success" },
            { 3, "text-danger" },
            { 6, "text-danger" },
            { 7, "text-warning" },
            { 8, "text-success" },
            { 9, "text-success" }
                };

        return estadoCssMap.TryGetValue(estadoId, out var cssClass) ? cssClass : "";
    }

    private async Task ConfirmarEntrega()
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("showSweetAlertConfirm", "Confirmar Compra", "¿Estás seguro de que deseas confirmar la entrega? Una vez realizada esta acción no se podrá modificar", "warning");
        if (confirmed)
        {
            compra = await repositorioCompra.ObtenerCompraPorIdPedido(pedido.id);
            compra.fecha_compra = DateOnly.FromDateTime(DateTime.Now);
            compra.finalizado = true;
            await repositorioCompra.Actualizar(compra);
            await repositorioProvision.CambiarEstadoProvision(prov, 9);
            await JSRuntime.InvokeVoidAsync("showSweetAlert", "¡Éxito!", "La entrega se confirmó correctamente", "success");
            NavigationManager.NavigateTo("/");
        }
    }
}

 